# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python
name: Python application

on:
  push:
    branches: 
      - main
  pull_request:
    branches: 
      - main
  workflow_dispatch: 

permissions:
  contents: read
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel build
          pip install flake8 pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Test that the module imports
        run: |
          pip install .
          python -c "import pyEELSMODEL; print(pyEELSMODEL.__path__)"

      - name: Test with pytest
        run: |
          pytest

      - name: Build the package
        run: python -m build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/
  
  pypi-publish:
      name: Upload release to PyPI
      runs-on: ubuntu-latest
      needs: build
      permissions:
        contents: read
        id-token: write
      steps:
        - uses: actions/checkout@v3
        - name: Download build artifacts
          uses: actions/download-artifact@v4
          with:
            name: dist
        - name: Debug downloaded artifact
          run: |
            echo "Workspace contents after download:"
            ls -l

        - name: Create dist directory and move files
          run: |
            mkdir -p dist
            mv *.whl *.tar.gz dist/
    
        - name: List contents of dist directory
          run: |
            echo "Contents of dist directory:"
            ls -l dist/
            
        - name: Publish package distributions to PyPI
          uses: pypa/gh-action-pypi-publish@release/v1

